# -*- coding: utf-8 -*-
"""Master's NLP Project (Thesis)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1uFrRZkwSN93OiipzRlGLU2kP-aY6wLk8
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import string
# %matplotlib inline
from nltk.sentiment.vader import SentimentIntensityAnalyzer
from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator

from google.colab import drive
drive.mount('/content/drive')

data = pd.read_csv("/content/drive/MyDrive/daraz_roman_urdu_reviews/daraz_reviews.csv/Daraz Labelled Review Dataset with Sentiments and Features.csv")

print(data.head())

print(data.isnull().sum()) # finding null value

import nltk
import re
nltk.download('stopwords')
stemmer = nltk.SnowballStemmer("english")
from nltk.corpus import stopwords
import string
stopword=set(stopwords.words('english'))

def clean(text):
    text = str(text).lower()
    text = re.sub('\[.*?\]', '', text)
    text = re.sub('https?://\S+|www\.\S+', '', text)
    text = re.sub('<.*?>+', '', text)
    text = re.sub('[%s]' % re.escape(string.punctuation), '', text)
    text = re.sub('\n', '', text)
    text = re.sub('\w*\d\w*', '', text)
    text = [word for word in text.split(' ') if word not in stopword]
    text=" ".join(text)
    text = [stemmer.stem(word) for word in text.split(' ')]
    text=" ".join(text)
    return text
data["Reviews"] = data["Reviews"].apply(clean)

nltk.download('vader_lexicon')
sentiments = SentimentIntensityAnalyzer()
data["Positive"] = [sentiments.polarity_scores(i)["pos"] for i in data["Reviews"]]
data["Negative"] = [sentiments.polarity_scores(i)["neg"] for i in data["Reviews"]]
data["Neutral"] = [sentiments.polarity_scores(i)["neu"] for i in data["Reviews"]]
data = data[["Reviews", "Positive", "Negative", "Neutral"]]
print(data.head())

x = sum(data["Positive"])
y = sum(data["Negative"])
z = sum(data["Neutral"])

def sentiment_score(a, b, c):
    if (a>b) and (a>c):
        print("Positive !!!!  ")
    elif (b>a) and (b>c):
        print("Negative !!!!!  ")
    else:
        print("Neutral !!!!  ")
sentiment_score(x, y, z)

print("Positive: ", x)
print("Negative: ", y)
print("Neutral: ", z)

text = " ".join(i for i in data.Reviews)
stopwords = set(STOPWORDS)
wordcloud = WordCloud(stopwords=stopwords,
                      background_color="white").generate(text)
plt.figure( figsize=(15,10))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis("off")
plt.show()